services:
  postgres:
    image: postgres:latest
    container_name: postgres_dockerizing
    ports:
      - ${POSTGRES_PORT}:5432
    restart: always
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_DB: "${POSTGRES_DB}"
      DB_SSLMODE: "${DB_SSLMODE}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U project_team29 -d PhoShoData" ]
      interval: 5s
      retries: 5
    volumes:
      - database_dockerizing:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
    networks:
      - fullstack
  api:
    container_name: api_dockerizing
    build: .
    ports:
      - 8080:8080
    restart: always
    volumes:
      - api_volume:/usr/src/app/
      - ./db/migrations:/db/migrations
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_DB: "${POSTGRES_DB}"
      DB_SSLMODE: "${DB_SSLMODE}"
    networks:
      - fullstack

volumes:
  database_dockerizing:
  api_volume:

networks:
  fullstack:
    driver: bridge